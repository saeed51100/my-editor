Hello
I have a headless WordPress site, the front end is with next.js and the back end is with WordPress.
I want to show a list of post titles on my site.
The WordPress API provides posts with pagination, that is, it provides 10 posts per page by default, and by adding per_page=100&_embed to the endpoint, the maximum limit can be increased to 100 posts.
But I don't want to get my posts paginated, instead I want to load and display posts with infinite scroll feature.
In other words, I want to cancel the pagination related to the WordPress api and scroll down to load all the post titles on my site.
To implement infinite scrolling, I am using the @tanstack/react-query and react-intersection-observer library and have done the following:


1- I have installed the following two libraries:
npm i @tanstack/react-query react-intersection-observer --save

2- I have written the pages/_app.tsx file so that the QueryClientProvider wraps all the components.

3- I have written the useApi.js file to fetch the post titles as follows:
// api/useApi.js
import { useInfiniteQuery } from '@tanstack/react-query'
import { useInView } from 'react-intersection-observer'

const API_URL = process.env.NEXT_PUBLIC_API_URL;


4- I have written the list-of-post.jsx file to display the titles of the posts as follows:
// components/list-of-post.jsx
import {usePosts} from "api/useApi";

export default function ListOfPost() {
    const {posts} = usePosts();

    return (
        <div>
            {posts?.map((post) => (
                <p key={post.id} className="py-6">
                    {post.title.rendered}
                </p>
            ))}
        </div>
    );
}


Please modify my code so that by scrolling down, all posts are loaded and displayed incrementally.
Thanks
