Hello
I have a headless WordPress site, the front end is with next.js and the back end is with WordPress.
I want to show a list of post titles on my site.
The WordPress API provides posts with pagination, that is, it provides 10 posts per page by default, and by adding per_page=100&_embed to the endpoint, the maximum limit can be increased to 100 posts.
But I don't want to get my posts paginated, instead I want to load and display posts with infinite scroll feature.
In other words, I want to cancel the pagination related to the WordPress api and scroll down to load all the post titles on my site.
To implement infinite scrolling, I want to use the react-window library and I have done the following:

1- I have written the .env.local file as follows:
// .env.local
  NEXT_PUBLIC_API_URL=https://raiatec.ir/wp-json/wp/v2

2- I have written the useApi.js file to fetch the post titles as follows:
// api/useApi.js
import {useQuery} from '@tanstack/react-query';

const API_URL = process.env.NEXT_PUBLIC_API_URL;
export function usePosts() {
    const fetchPosts = async () => {
        const response = await fetch(`${API_URL}/posts`);
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    };

    const {data, error, isLoading, isError} = useQuery({
        queryKey: ['posts'],
        queryFn: fetchPosts,
    });

    return {
        posts: data,
        isLoading,
        isError: !!error
    };
}

3- I have written the pages/_app.tsx file as follows so that QueryClientProvider wraps all components:
   // pages/_app.tsx
   import type { AppProps } from 'next/app'
   import "../src/global.css";
   import Layout from "../components/layout";
   import { QueryClient, QueryClientProvider } from '@tanstack/react-query';

   const queryClient = new QueryClient();

   export default function MyApp({ Component, pageProps }: AppProps) {
      return (
        <QueryClientProvider client={queryClient}>
          <Layout>
            <Component {...pageProps} />
          </Layout>
        </QueryClientProvider>
      );
   }

4- I have written the list-of-post.jsx file to display the titles of the posts as follows:
// components/list-of-post.jsx
import {usePosts} from "api/useApi";

export default function ListOfPost() {
    const {posts} = usePosts();

    return (
        <div>
            {posts?.map((post) => (
                <p key={post.id} className="py-6">
                    {post.title.rendered}
                </p>
            ))}
        </div>
    );
}

So far so good, app is running and react-window is working too.
But the problem is, as I said at the beginning of the chat, it only displays the first 10 posts.
Please modify my code so that by scrolling down, all posts are loaded and displayed incrementally.
Thanks
